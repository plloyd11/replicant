---
import Lightbox from './Lightbox.astro';
const { product } = Astro.props;

// Create a new Date object from the product.preOrder string
const preOrderDate = new Date(product.preOrder);

// Format the date as mm/dd/yy
const formattedPreOrderDate = `${
    preOrderDate.getMonth() + 1
}/${preOrderDate.getDate()}/${preOrderDate.getFullYear().toString()}`;
---

<div class="flex flex-col justify-between" data-product-type={product.productType}>
    <div class="relative">
        <div class="relative w-full overflow-hidden rounded-lg h-72">
            <div class="absolute top-1 right-1">
                <span
                    class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-replicant-100 text-replicant-800"
                >
                    {product.productType}
                </span>
            </div>
            <Lightbox image={product.images[0].url} title={product.title} />
            <div class="absolute inset-x-0 bottom-0 flex items-end justify-end p-2 overflow-hidden">
                <p class="relative text-lg font-semibold text-replicant-100 text-shadow">
                    ${product.price}.00
                </p>
            </div>
        </div>
        <div class="relative mt-4">
            <h3 class="text-xl font-medium text-replicant-100">{product.title}</h3>
            {
                product.preOrder && (
                    <p class="mt-1 text-sm italic font-light text-secondaryColor">
                        This item is a pre-order and will ship on {formattedPreOrderDate}
                    </p>
                )
            }
            <p class="mt-2 text-replicant-300 sm:line-clamp-3">
                {product.description}
            </p>
        </div>
    </div>
    <div class="mt-6">
        {
            product.productType === 'clothing' ? (
                <button
                    class="relative flex items-center justify-center px-8 py-2 text-sm font-medium transition-all duration-200 border border-transparent rounded-md snipcart-add-item bg-replicant-200 text-replicant-900 hover:bg-replicant-400"
                    data-item-id={product.id}
                    data-item-price={product.price}
                    data-item-url="/"
                    data-item-description={product.description}
                    data-item-image={product.images[0].url}
                    data-item-name={product.title}
                    data-item-weight={product.productWeight}
                    data-item-custom1-name="Size"
                    data-item-custom1-options="Small | Medium | Large | XL | XXL"
                >
                    Add to bag
                </button>
            ) : product.productType === 'digital' ? (
                <button
                    class="relative flex items-center justify-center px-8 py-2 text-sm font-medium transition-all duration-200 border border-transparent rounded-md snipcart-add-item bg-replicant-200 text-replicant-900 hover:bg-replicant-400"
                    data-item-id={product.id}
                    data-item-price={product.price}
                    data-item-url="/"
                    data-item-file-guid={product.fileGuid}
                    data-item-shippable="false"
                    data-item-description={product.description}
                    data-item-image={product.images[0].url}
                    data-item-name={product.title}
                >
                    Add to bag
                </button>
            ) : (
                <button
                    class="relative flex items-center justify-center px-8 py-2 text-sm font-medium transition-all duration-200 border border-transparent rounded-md snipcart-add-item bg-replicant-200 text-replicant-900 hover:bg-replicant-400"
                    data-item-id={product.id}
                    data-item-price={product.price}
                    data-item-url="/"
                    data-item-description={product.description}
                    data-item-image={product.images[0].url}
                    data-item-name={product.title}
                    data-item-weight={product.productWeight}
                >
                    Add to bag
                </button>
            )
        }
    </div>
</div>

<style>
    .text-shadow {
        text-shadow: 0 2px 2px rgba(0, 0, 0, 0.6);
    }
</style>
